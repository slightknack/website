body {
    font-family: "Spectral", serif;
    font-size: calc(10px + 1.6vh);
    line-height: 1.3;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    scroll-behavior: smooth;
}

nav {
    position: -webkit-sticky; /* Safari */
    position: sticky;
    top: 0;
    margin: 0;
    padding: 2vh;
    background-color: #1544cc;
    color: #fff;
    height: calc(100vh - 4vh);
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    overflow: auto;
}

nav > * {
    display: flex;
    margin: 0;
    margin-bottom: 2vh;
}

@media only screen and (max-width: 512px) {
    body {
        display: block;
    }

    nav {
        height: auto;
        width: calc(100vw - 4vh);
        flex-direction: row;
    }

    nav > * {
        margin: 0;
        margin-right: 2vh;
    }
}

.content {
    flex-grow: 1;
    min-width: 0;
}

.page, .edit {
    padding-left: 2vh;
    padding-right: 2vh;
    margin-left: auto;
    margin-right: auto;
    max-width: calc(256px + 50vh);
}

p {
    font-size: calc(10px + 1.6vh);
    hyphens: auto;
    margin-top: 2vh;
    margin-bottom: 2vh;
    overflow-x: auto;
    overflow-y: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    letter-spacing: 0.05em;
    margin-top: 4vh;
    margin-bottom: 2vh;
    font-family: "Spectral SC", serif;
    font-weight: bold;
}

.title {
    font-size: calc(18px + 1.6vh);
}

h1 { font-size: calc(14px + 1.6vh); }
h2 { font-size: calc(12pt + 1.6vh); }
h3 { font-size: calc(11px + 1.6vh); }
h4 { font-size: calc(10.6px + 1.6vh); }
h5 { font-size: calc(10.25px + 1.6vh); }
h6 { font-size: calc(10.125px + 1.6vh); }

pre {
    overflow: scroll;
    padding: 2vh;
    margin-top: 2vh;
    margin-bottom: 2vh;
    background-color: #ddd;
    border-radius: 2pt;
}

code {
    font-size: 0.9em;
    white-space: nowrap;
    background-color: #ddd;
    font-family: "Fira Mono", monospace;
    padding: 2pt;
    border-radius: 2pt;
}

pre code {
    white-space: pre;
    background-color: #ffffff00;
    padding: 0;
    border-radius: none;
}

blockquote {
    margin-top: 2vh;
    margin-bottom: 2vh;
    font-style: italic;
    padding-left: 2vh;
    border-left: 2pt solid #ddd;
}

ol,
ul {
    padding-left: 4vh;
}

ul {
    list-style: circle outside none;
}

ol {
    list-style: decimal outside none;
}

hr {
    margin-top: 2vh;
    margin-bottom: 2vh;
    border: 0 solid black;
    border-top: 2pt solid #ddd;
}

a {
    color: inherit;
    letter-spacing: 0.05em;
    font-family: "Spectral SC", serif;
    text-decoration: none;
    background-image: linear-gradient(120deg, #ddd 0%, #ddd 100%);
    background-size: 0 100%;
    background-repeat: no-repeat;
    background-position: 0 100%;
    transition: background-size 0.125s ease-in-out;
    padding: 2pt;
    border-radius: 2pt;
}

a:after {
    content: " ❃";
    /* font-weight: bold; */
    color: #1544cc;
}

a:visited:after {
    color: #15aacc;
}

a:hover {
    background-size: 100% 100%;
}

a:active {
    background-color: #15aacc;
}

.icon {
    background: none;
}

.icon:after {
    content: "";
}

.icon:active {
    color: #fff;
    background: none;
}

.icon > *:active {
    background-color: #15aacc;
}

.material-icons {
    font-size: inherit !important;
    padding: 2pt;
    border-radius: 2pt;
}

button, input[type="submit"], input[type="reset"] {
    border: none;
    font: inherit;
    cursor: pointer;
    margin-top: 2vh;
    margin-bottom: 2vh;
    padding: 2vh;
    border-radius: 2pt;
    letter-spacing: 0.05em;
    font-family: "Spectral SC", serif;
    color: white;
    background-color: #1544cc;
    transition: background-color 0.125s ease-in-out;
}

button:active, input[type=submit]:active, input[type="reset"]:active {
    background-color: #15aacc;
}

em {
    font-style: italic;
}

strong {
    font-weight: bold;
}

img {
    margin-top: 2vh;
    margin-bottom: 2vh;
    margin-left: -2vh;
    margin-right: -2vh;
    width: calc(100% + 4vh);
}

table {
    margin-top: 2vh;
    margin-bottom: 2vh;
    margin-left: 2vh;
    margin-right: 2vh;
    display: block;
    overflow-x: auto;
    overflow-y: hidden;
    white-space: nowrap;
}

thead {
    font-family: "Spectral SC", serif;
    font-weight: bold;
    letter-spacing: 0.05em;
}

tr {
    border-top: 2pt solid #ddd;
}

thead tr {
    border-top: none;
}

td { padding: 0.8vh; }
th { padding: 0.8vh; }

/* For some reason, only one stylesheet will load
   this is a hack to load an additional style sheet. */

/* BASICS */

.CodeMirror {
  font-family: Fira Code, monospace;
  font-size: 0.9em;
}

/* PADDING */

.CodeMirror-lines {
  padding: 2vh 0; /* Vertical padding around content */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  padding: 0 2vh; /* Horizontal padding of content */
}

/* GUTTER */

.CodeMirror-gutters {
  border-radius: 2pt;
  background-color: #ddd;
  white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
  padding: 0 2vh 0 2vh;
  text-align: right;
  white-space: nowrap;
}

/* CURSOR */

.CodeMirror-cursor {
  border-left: 2pt solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 2px solid #ddd;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}
.cm-fat-cursor-mark {
  background-color: rgba(20, 255, 20, 0.5);
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
}
.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}
@-moz-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@-webkit-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-rulers {
  position: absolute;
  left: 0; right: 0; top: -50px; bottom: 0;
  overflow: hidden;
}
.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  top: 0; bottom: 0;
  position: absolute;
}

/* DEFAULT THEME */

.cm-s-default .cm-header {color: blue;}
.cm-s-default .cm-quote {color: #090;}
.cm-negative {color: #d44;}
.cm-positive {color: #292;}
.cm-header, .cm-strong {font-weight: bold;}
.cm-em {font-style: italic;}
.cm-link {text-decoration: underline;}
.cm-strikethrough {text-decoration: line-through;}

.cm-s-default .cm-keyword {color: #708;}
.cm-s-default .cm-atom {color: #219;}
.cm-s-default .cm-number {color: #164;}
.cm-s-default .cm-def {color: #00f;}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {}
.cm-s-default .cm-variable-2 {color: #05a;}
.cm-s-default .cm-variable-3, .cm-s-default .cm-type {color: #085;}
.cm-s-default .cm-comment {color: #a50;}
.cm-s-default .cm-string {color: #a11;}
.cm-s-default .cm-string-2 {color: #f50;}
.cm-s-default .cm-meta {color: #555;}
.cm-s-default .cm-qualifier {color: #555;}
.cm-s-default .cm-builtin {color: #30a;}
.cm-s-default .cm-bracket {color: #997;}
.cm-s-default .cm-tag {color: #170;}
.cm-s-default .cm-attribute {color: #00c;}
.cm-s-default .cm-hr {color: #999;}
.cm-s-default .cm-link {color: #00c;}

.cm-s-default .cm-error {color: #f00;}
.cm-invalidchar {color: #f00;}

.CodeMirror-composing { border-bottom: 2px solid; }

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {color: #0b0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #a22;}
.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
.CodeMirror-activeline-background {background: #e8f2ff;}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
  position: relative;
  overflow: hidden;
}

.CodeMirror-scroll {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 50px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -50px; margin-right: -50px;
  padding-bottom: 50px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}
.CodeMirror-vscrollbar {
  right: 0; top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0; left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0; bottom: 0;
}

.CodeMirror-gutters {
  position: absolute; left: 0; top: 0;
  min-height: 100%;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -50px;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.CodeMirror-gutter-background {
  position: absolute;
  top: 0; bottom: 0;
  z-index: 4;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection { background-color: transparent }
.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0; right: 0; top: 0; bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {}

.CodeMirror-rtl pre { direction: rtl; }

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}
.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }
.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }

.cm-searching {
  background-color: #ffa;
  background-color: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after { content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext { background: none; }
